services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/fastapi_enterprise
      - ENVIRONMENT=development
      - DEBUG=true
      - POETRY_VERSION=2.1.3
      - PYTHONPATH=/app
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/__pycache__
      - /app/.pytest_cache
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - fastapi-network

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=fastapi_enterprise
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fastapi_enterprise"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - fastapi-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fastapi-network

volumes:
  postgres_data:
  redis_data:

networks:
  fastapi-network:
    driver: bridge
